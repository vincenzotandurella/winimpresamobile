package com.winimpresa.mobile;

import java.util.Calendar;

import android.app.ActionBar;
import android.app.TimePickerDialog;
import android.content.Context;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.MotionEvent;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.TimePicker;
import android.widget.ViewFlipper;

public class SettoriActivity extends ActivityBase {
	
	private ViewFlipper viewFlipper;
    private TextView paginazione;
    private int test = 3;
    private Button  avanti;
    private Button indietro;
  
	
    
    @Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState,R.layout.activity_settori);
		ActionBar ab = getActionBar();
	    ab.setHomeButtonEnabled(true);
		ab.setDisplayHomeAsUpEnabled(true);
		ab.setDisplayUseLogoEnabled(false);
		ab.setIcon( new ColorDrawable(getResources().getColor(android.R.color.transparent)));
		ab.setSubtitle(user.getFullName() + " / "+user.getIdUser());
		
		
		
		 viewFlipper   = (ViewFlipper) findViewById(R.id.viewflipper);
	     avanti        = (Button) findViewById(R.id.avanti);
	     indietro      = (Button) findViewById(R.id.indietro);
	     paginazione    = (TextView) findViewById(R.id.paginazione);
		 this.createSettoriTest();
		
		 avanti.setOnClickListener(new View.OnClickListener() {

				@Override
				public void onClick(View v) {
					if (viewFlipper.getDisplayedChild() == 3)
		                  return;
					
					
				 	 viewFlipper.setInAnimation(context, R.anim.slide_in_from_right);
		            	// Current screen goes out from left. 
		            	 viewFlipper.setOutAnimation(context, R.anim.slide_out_to_left);
					 viewFlipper.showNext();
				
				}
			});
		 
		 indietro.setOnClickListener(new View.OnClickListener() {

				@Override
				public void onClick(View v) {
					if (viewFlipper.getDisplayedChild() == 0)
		                  return;
					 viewFlipper.setInAnimation(context, R.anim.slide_in_from_left);
		               
		                viewFlipper.setOutAnimation(context, R.anim.slide_out_to_right);
					 viewFlipper.showPrevious();
				
				}
			});
	}

	public void createSettoriTest(){
		
		
		for(int i=0; i<=test; i++){	
			
          	 LayoutInflater inflater = (LayoutInflater) this
		                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			 View view = inflater.inflate(R.layout.view_settore_default, null);

			 viewFlipper.addView(view,i);
			 
			// TextView text = (TextView) view.findViewById(R.id.text);
			// text.setText("Testo "+i);
			 
			 
		}
		
		
	}
	
	
	public  void setPaginazione(){
		
		String paginazione = " / ";
	     
		paginazione = viewFlipper.getDisplayedChild()+1 +paginazione + viewFlipper.getChildCount();
		
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.settori, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
	
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	
	
	/*
   public boolean onTouchEvent(MotionEvent touchevent) {
	    	
	   
	    switch (touchevent.getAction()) {
	        
	        case MotionEvent.ACTION_DOWN: 
	        	lastX = touchevent.getX();
	            break;
	        case MotionEvent.ACTION_UP: 
	            float currentX = touchevent.getX();
	            System.out.println();
	            // Handling left to right screen swap.
	            if (lastX < currentX) {
	            	
	            	// If there aren't any other children, just break.
	                if (viewFlipper.getDisplayedChild() == 0)
	                	break;
	                
	                // Next screen comes in from left.
	                viewFlipper.setInAnimation(this, R.anim.slide_in_from_left);
	                // Current screen goes out from right. 
	                viewFlipper.setOutAnimation(this, R.anim.slide_out_to_right);
	                
	                // Display next screen.
	                viewFlipper.showNext();
	             }
	                                     
	            // Handling right to left screen swap.
	             if (lastX > currentX) {
	            	 
	            	
	            		 
	            	 // Next screen comes in from right.
	            	 viewFlipper.setInAnimation(this, R.anim.slide_in_from_right);
	            	// Current screen goes out from left. 
	            	 viewFlipper.setOutAnimation(this, R.anim.slide_out_to_left);
	                 
	            	// Display previous screen.
	                 viewFlipper.showPrevious();
	             }
	             break;
	    	 }
	         return false;
	    }
	   */ 
}
