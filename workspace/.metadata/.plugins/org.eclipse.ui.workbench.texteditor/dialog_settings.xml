<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog">
		<item value="false" key="isRegEx"/>
		<item value="import com.winimpresa.mobile.R;" key="selection"/>
		<item value="false" key="casesensitive"/>
		<item value="false" key="incremental"/>
		<item value="true" key="wrap"/>
		<item value="false" key="wholeword"/>
		<list key="findhistory">
			<item value="import com.example.test_win.R;"/>
			<item value="showDialog"/>
			<item value="BuonoActivity"/>
			<item value="getDisplayedChild"/>
			<item value="switch (event.getAction())&#x0A;    {&#x0A;        case MotionEvent.ACTION_DOWN:&#x0A;        {&#x0A;            //Gets the startpoint for you finger&#x0A;            pressDownPoint = event.getX();&#x0A;&#x0A;            //Gets how many view there is in the viewflipper&#x0A;            flipperViewCount = flipper.getChildCount();&#x0A;&#x0A;            //Checks if there is a view to the left of the current view&#x0A;//if there is, it positions it to the left of the current view&#x0A;            if (flipper.getDisplayedChild() &gt; 0)&#x0A;            {&#x0A;                View leftChild = flipper.getChildAt(flipper.getDisplayedChild() - 1);&#x0A;                //You must set the left view to invisible or visible &#x0A;//or it will not move to the position you tell it&#x0A;                leftChild.setVisibility(View.INVISIBLE);&#x0A;                leftChild.layout(-screenWidth, &#x0A;                        leftChild.getTop(), 0, &#x0A;                        leftChild.getBottom());&#x0A;            }&#x0A;&#x0A;            //Same as above but for the view to the right&#x0A;            if (flipper.getDisplayedChild() &lt; flipperViewCount - 1)&#x0A;            {&#x0A;                View rightChild = flipper.getChildAt(flipper.getDisplayedChild() + 1);&#x0A;                rightChild.setVisibility(View.INVISIBLE);&#x0A;                rightChild.layout(screenWidth, &#x0A;                        rightChild.getTop(), screenWidth * 2, &#x0A;                        rightChild.getBottom());&#x0A;            }&#x0A;            break;&#x0A;        }&#x0A;        case MotionEvent.ACTION_UP:&#x0A;        {&#x0A;            //Gets the absolute position on the screen&#x0A;            float releasePoint = event.getRawX();&#x0A;&#x0A;            //Calculates if the fling is to the right or left&#x0A;//The screenDensity variable is simply the density of the device&#x0A;//Have in mind that this will not flipp the viewflipper if you drag&#x0A;//your finger less than about 0.5cm (depeding on the device)&#x0A;//In that case you need to make an animation that takes the view back&#x0A;//to its original position. Else it will just get stuck where you&#x0A;//let go with your finger.&#x0A;            if (Math.abs(pressDownPoint - releasePoint) / screenDensity &gt; 30)&#x0A;            {&#x0A;                if (pressDownPoint &gt; releasePoint)&#x0A;                {&#x0A;                    myAnimLeft(); //Method with your animation&#x0A;                    flipper.showNext();&#x0A;                }&#x0A;                else&#x0A;                {&#x0A;                    myAnimRight();&#x0A;                    flipper.showPrevious();&#x0A;                }&#x0A;            }&#x0A;            break;&#x0A;        }&#x0A;        case MotionEvent.ACTION_MOVE:&#x0A;        {&#x0A;            View currentView = flipper.getCurrentView();&#x0A;&#x0A;            //Moves the current view&#x0A;//screenWidth is based on the current devices screen width&#x0A;            currentView.layout((int)(event.getRawX() - pressDownPoint), &#x0A;                    currentView.getTop(), (int)(event.getRawX() - pressDownPoint) + screenWidth, &#x0A;                    currentView.getBottom());&#x0A;&#x0A;            //Moves the view to the left if there is one&#x0A;            if (flipper.getDisplayedChild() &gt; 0)&#x0A;            {&#x0A;                View leftChild = flipper.getChildAt(flipper.getDisplayedChild() - 1);&#x0A;                leftChild.layout((int)(event.getRawX() - pressDownPoint - screenWidth), &#x0A;                        leftChild.getTop(), (int)(event.getRawX() - pressDownPoint), &#x0A;                        leftChild.getBottom());&#x0A;&#x0A;                //Sets the left view to visible so it shows&#x0A;                if (leftChild.getVisibility() == View.INVISIBLE)&#x0A;                {&#x0A;                    leftChild.setVisibility(View.VISIBLE);&#x0A;                }&#x0A;            }&#x0A;&#x0A;            //Same as above but for the view to the right&#x0A;            if (flipper.getDisplayedChild() &lt; flipperViewCount - 1)&#x0A;            {&#x0A;                View rightChild = flipper.getChildAt(flipper.getDisplayedChild() + 1);&#x0A;                rightChild.layout((int)(event.getRawX() - pressDownPoint + screenWidth), &#x0A;                        rightChild.getTop(), (int)(event.getRawX() - pressDownPoint + (screenWidth * 2)), &#x0A;                        rightChild.getBottom());&#x0A;&#x0A;                if (rightChild.getVisibility() == View.INVISIBLE)&#x0A;                {&#x0A;                    rightChild.setVisibility(View.VISIBLE);&#x0A;                }&#x0A;            }&#x0A;        }&#x0A;&#x0A;    }&#x0A;    return true;"/>
			<item value="onTouchEvent"/>
		</list>
		<list key="replacehistory">
			<item value="import com.winimpresa.mobile.R;"/>
		</list>
	</section>
	<section name="org.eclipse.ui.texteditor.FindReplaceDialog_dialogBounds">
		<item value="265" key="DIALOG_WIDTH"/>
		<item value="1|.Helvetica Neue DeskInterface|11.0|0|COCOA|1|.HelveticaNeueDeskInterface-Regular" key="DIALOG_FONT_NAME"/>
		<item value="399" key="DIALOG_HEIGHT"/>
		<item value="588" key="DIALOG_X_ORIGIN"/>
		<item value="140" key="DIALOG_Y_ORIGIN"/>
	</section>
</section>
